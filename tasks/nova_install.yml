---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Ensure apt cache is up to date
  apt:
    update_cache: yes
    cache_valid_time: "{{ cache_timeout }}"
  when:
    - ansible_pkg_mgr == 'apt'

- name: Add Ubuntu Cloud Archive key package
  package:
    name: ubuntu-cloud-keyring
    state: "{{ nova_package_state }}"
  when:
    - nova_uca_enable
    - ansible_pkg_mgr == 'apt'
  register: nova_uca_add_keys
  tags:
    - add-apt-keys

- name: Add Ubuntu Cloud Archive apt repository
  apt_repository:
    repo: "{{ uca_repo }}"
    state: present
    update_cache: yes
    filename: "{{ uca_apt_source_list_filename | default(omit) }}"
  register: nova_uca_add_repo
  when:
    - nova_uca_enable
    - ansible_pkg_mgr == 'apt'
  until: add_repo|success
  retries: 5
  delay: 2
  tags:
    - add-uca-repo

- name: Install RDO package
  package:
    name: "{{ rdo_package }}"
    state: "present"
  register: install_cloud_rdo_package
  until: install_cloud_rdo_package | success
  retries: 5
  delay: 2
  when:
    - ansible_pkg_mgr == 'yum'

- name: Install distro packages
  package:
    name: "{{ item }}"
    state: "{{ nova_package_state }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  with_items: "{{ nova_distro_packages }}"
  tags:
    - nova-apt-packages

- name: Remove known problem packages for the Spice console
  package:
    name: "{{ item }}"
    state: absent
  register: remove_packages
  until: remove_packages|success
  retries: 5
  delay: 2
  with_items: "{{ nova_spice_distro_packages }}"
  when:
    - inventory_hostname in groups['nova_console']
    - nova_console_type == "spice"
  tags:
    - nova-apt-packages
    - nova-spice-apt-packages

- name: Install distro packages (novnc console)
  package:
    name: "{{ item }}"
    state: "{{ nova_package_state }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  with_items: "{{ nova_novnc_distro_packages }}"
  when:
    - inventory_hostname in groups['nova_console']
    - nova_console_type == "novnc"
  tags:
    - nova-apt-packages
    - nova-novnc-apt-packages

- name: Install distro packages (compute - KVM)
  package:
    name: "{{ item }}"
    state: "{{ nova_package_state }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  with_items: "{{ nova_compute_kvm_distro_packages }}"
  when:
    - inventory_hostname in groups['nova_compute']
    - nova_virt_type == 'kvm' or nova_virt_type == 'qemu'
  tags:
    - nova-apt-packages
    - nova-compute-kvm-apt-packages

- name: Install distro packages (compute - LXD)
  package:
    name: "{{ item }}"
    state: "{{ nova_package_state }}"
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  with_items: "{{ nova_compute_lxd_distro_packages }}"
  when:
    - inventory_hostname in groups['nova_compute']
    - nova_virt_type == 'lxd'
  tags:
    - nova-apt-packages
    - nova-compute-lxd-apt-packages

- name: Create developer mode constraint file
  copy:
    dest: "/opt/developer-pip-constraints.txt"
    content: |
      {% for item in nova_developer_constraints %}
      {{ item }}
      {% endfor %}
  when: nova_developer_mode | bool
  tags:
    - nova-pip-packages

- name: Install requires pip packages
  pip:
    name: "{{ nova_requires_pip_packages }}"
    state: "{{ nova_pip_package_state }}"
    extra_args: >-
      {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''),'') }}
      {{ pip_install_options | default('') }}
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  tags:
    - nova-pip-packages

- name: Attempt venv download
  get_url:
    url: "{{ nova_venv_download_url }}"
    dest: "/var/cache/{{ nova_venv_download_url | basename }}"
    checksum: "sha1:{{ lookup('url', nova_venv_download_url | replace('tgz', 'checksum')) }}"
  register: nova_get_venv
  when: nova_venv_download | bool
  tags:
    - nova-pip-packages

- name: Remove existing venv
  file:
    path: "{{ nova_bin | dirname }}"
    state: absent
  when: nova_get_venv | changed
  tags:
    - nova-pip-packages

- name: Create nova venv dir
  file:
    path: "{{ nova_bin | dirname }}"
    state: directory
  register: nova_venv_dir
  tags:
    - nova-pip-packages

- name: Unarchive pre-built venv
  unarchive:
    src: "/var/cache/{{ nova_venv_download_url | basename }}"
    dest: "{{ nova_bin | dirname }}"
    copy: "no"
  when:
    - not nova_developer_mode | bool
    - nova_get_venv | changed
  notify: Restart nova services
  tags:
    - nova-pip-packages

- name: Install pip packages
  pip:
    name: "{{ nova_pip_packages }}"
    state: "{{ nova_pip_package_state }}"
    virtualenv: "{{ nova_bin | dirname }}"
    virtualenv_site_packages: "no"
    extra_args: >-
      {{ nova_developer_mode | ternary('--constraint /opt/developer-pip-constraints.txt', '') }}
      {{ (pip_install_upper_constraints is defined) | ternary('--constraint ' + pip_install_upper_constraints | default(''),'') }}
      {{ pip_install_options | default('') }}
  register: install_packages
  until: install_packages|success
  retries: 5
  delay: 2
  when: nova_get_venv | failed or nova_get_venv | skipped or nova_developer_mode | bool
  notify: Restart nova services
  tags:
    - nova-pip-packages

- name: CentOS remove python from path first
  file:
    path:  "{{ nova_bin | dirname }}/bin/python2.7"
    state: "absent"
  when:
    - ansible_pkg_mgr == 'yum'
    - not nova_developer_mode | bool
    - nova_get_venv | changed

- name: Update virtualenv path
  command: >
    virtualenv-tools --update-path=auto --reinitialize {{ nova_bin | dirname }}
  when:
    - not nova_developer_mode | bool
    - nova_get_venv | changed
  tags:
    - nova-pip-packages

- include: nova_console_spice_install.yml
  when:
    - inventory_hostname in groups['nova_console']
    - nova_console_type == "spice"
  tags:
    - nova-spice-console

- include: nova_console_novnc_install.yml
  when:
    - inventory_hostname in groups['nova_console']
    - nova_console_type == "novnc"
  tags:
    - nova-novnc-console
